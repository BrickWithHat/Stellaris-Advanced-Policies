namespace = AP_PQ
# Start of the event chain for Egalitarian Empires
planet_event = {
	id = AP_PQ.500
	is_triggered_only = yes
	location = from
	picture = GFX_evt_busy_spaceport
	title = AP_PQ.500_title
	desc = AP_PQ.500_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_planned
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	## Progress Option
	option = {
		name = AP_PQ.500_1
		hidden_effect = {
			planet_event = {
				id = AP_PQ.510
				days = 30
				random = 30
			}
		}
	}
	# # Project Focus
	# option = {
	# 	name = AP_PQ.500_2
	# 	hidden_effect = {
	# 		planet_event = {
	# 			id = AP_PQ.520
	# 			days = 30
	# 			random = 30
	# 		}
	# 	}
	# }
	## Abolish
	option = {
		name = AP_PQ.500_3
		hidden_effect = {
			set_variable = {
				which = quota_abolish
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 30
				random = 30
			}
		}
	}
}

##########################################################################
# First Motive (Progress)
##########################################################################
planet_event = {
	id = AP_PQ.510
	is_triggered_only = yes
	location = from
	picture = GFX_evt_announcement
	title = AP_PQ.510_title
	desc = AP_PQ.510_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_planned
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	option = {
		name = AP_PQ.510_1
		remove_modifier = planet_quota_planned
		add_modifier = {
			modifier = planet_quota_phase_1
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.511
				days = 90
				random = 30
			}
		}
	}
}

## first phase 
planet_event = {
	id = AP_PQ.511
	is_triggered_only = yes
	location = from
	picture = GFX_evt_inhabited_solar_system
	title = AP_PQ.511_title
	desc = AP_PQ.511_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_phase_1
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	## Ignore the problem
	option = {
		name = AP_PQ.511_1
		hidden_effect = {
			if = {
				limit = {
					any_owned_pop = {
						is_pop_category = worker
						happiness > 70
					}
				}
				planet_event = {
					id = AP_PQ.512
					days = 360
					random = 180
				}
				else = {
					change_variable = {
						which = quota_delay
						value = 1
					}
					add_modifier = {
						modifier = planet_unhappy_populace
						days = 1800
					}
					planet_event = {
						id = AP_PQ.512
						days = 360
						random = 180
					}
				}
			}
		}
	}
	## Do something about it
	option = {
		name = AP_PQ.511_2
		owner = {
			add_resource = {
				consumer_goods = -500
				energy = -1500
			}
		}
		allow = {
			owner = {
				has_resource = {
					type = consumer_goods
					amount > 500
				}
				has_resource = {
					type = energy
					amount > 1500
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.512
				days = 360
				random = 180
			}
		}
	}
	## Special Inspire (Idealist foundation)
	option = {
		trigger = {
			owner = {
				has_civic = civic_idealistic_foundation
			}
		}
		name = AP_PQ.511_3
		owner = {
			add_resource = {
				unity = 1000
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.512
				days = 360
				random = 180
			}
		}
	}
	## Special Inspire (Citizen Service)
	option = {
		trigger = {
			owner = {
				has_civic = civic_citizen_service
			}
		}
		owner = {
			add_resource = {
				unity = 1000
			}
		}
		name = AP_PQ.511_3
		hidden_effect = {
			planet_event = {
				id = AP_PQ.512
				days = 360
				random = 180
			}
		}
	}
	## Special Inspire (Nationlistic Zeal)
	option = {
		trigger = {
			owner = {
				has_civic = civic_nationalistic_zeal
			}
		}
		name = AP_PQ.511_3
		owner = {
			add_resource = {
				unity = 1000
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.512
				days = 360
				random = 180
			}
		}
	}
	## Special Inspire (Brand Loyalty)
	option = {
		trigger = {
			owner = {
				has_civic = civic_brand_loyalty
			}
		}
		name = AP_PQ.511_3
		owner = {
			add_resource = {
				unity = 1000
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.512
				days = 360
				random = 180
			}
		}
	}
}

## Second phase with a boon
planet_event = {
	id = AP_PQ.512
	is_triggered_only = yes
	location = from
	picture = GFX_evt_arguing_senate
	title = AP_PQ.512_title
	desc = AP_PQ.512_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_phase_1
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	## Productivy bonus
	option = {
		name = AP_PQ.512_1
		remove_modifier = planet_quota_phase_1
		add_modifier = {
			modifier = planet_quota_phase_2
		}
		owner = {
			add_modifier = {
				modifier = country_worker_bonus
				days = 1800
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.513
				days = 1800
				random = 360
			}
		}
	}
	## Science Bonus
	option = {
		name = AP_PQ.512_2
		remove_modifier = planet_quota_phase_1
		add_modifier = {
			modifier = planet_quota_phase_2
		}
		owner = {
			add_modifier = {
				modifier = country_science_bonus
				days = 1800
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.513
				days = 1800
				random = 360
			}
		}
	}
	## Culture Bonus
	option = {
		name = AP_PQ.512_3
		remove_modifier = planet_quota_phase_1
		add_modifier = {
			modifier = planet_quota_phase_2
		}
		owner = {
			add_modifier = {
				modifier = country_culture_bonus
				days = 1800
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.513
				days = 1800
				random = 360
			}
		}
	}
}

## Second phase delay check
planet_event = {
	id = AP_PQ.513
	is_triggered_only = yes
	location = from
	picture = GFX_evt_board_meeting
	title = AP_PQ.513_title
	desc = AP_PQ.513_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_phase_2
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	## Ignore
	option = {
		name = AP_PQ.513_1
		hidden_effect = {
			if = {
				limit = {
					planet = {
						OR = {
							num_districts = {
								type = any
								value > 10
							}
							is_planet_class = pc_city
						}
					}
				}
				planet_event = {
					id = AP_PQ.514
					days = 1800
					random = 360
				}
				else = {
					planet_event = {
						id = AP_PQ.514
						days = 1800
						random = 360
					}
					add_modifier = {
						modifier = planet_discouraged_populace
					}
					change_variable = {
						which = quota_delay
						value = 1
					}
				}
			}
		}
	}
	## Invest
	option = {
		name = AP_PQ.513_2
		owner = {
			add_resource = {
				minerals = -2500
				energy = -1000
			}
		}
		add_modifier = {
			modifier = planet_infrastructure_investment
			days = 900
		}
		allow = {
			owner = {
				has_resource = {
					type = minerals
					amount > 2500
				}
				has_resource = {
					type = energy
					amount > 1000
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.514
				days = 1800
				random = 360
			}
		}
	}
	## Special efficiency (Technocracy)
	option = {
		name = AP_PQ.513_3
		trigger = {
			owner = {
				has_civic = civic_technocracy
			}
		}
		owner = {
			add_resource = {
				minerals = -1500
				energy = -500
			}
		}
		add_modifier = {
			modifier = planet_infrastructure_investment
			days = 1800
		}
		allow = {
			owner = {
				has_resource = {
					type = minerals
					amount > 1500
				}
				has_resource = {
					type = energy
					amount > 500
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.514
				days = 1800
				random = 360
			}
		}
	}
	## Special efficiency (Corvee System)
	option = {
		name = AP_PQ.513_3
		trigger = {
			owner = {
				has_civic = civic_corvee_system
			}
		}
		owner = {
			add_resource = {
				minerals = -1500
				energy = -500
			}
		}
		add_modifier = {
			modifier = planet_infrastructure_investment
			days = 1800
		}
		allow = {
			owner = {
				has_resource = {
					type = minerals
					amount > 1500
				}
				has_resource = {
					type = energy
					amount > 500
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.514
				days = 1800
				random = 360
			}
		}
	}
	## Special efficiency (Byzantine Bureaucracy)
	option = {
		name = AP_PQ.513_3
		trigger = {
			owner = {
				has_civic = civic_byzantine_bureaucracy
			}
		}
		owner = {
			add_resource = {
				minerals = -1500
				energy = -500
			}
		}
		add_modifier = {
			modifier = planet_infrastructure_investment
			days = 1800
		}
		allow = {
			owner = {
				has_resource = {
					type = minerals
					amount > 1500
				}
				has_resource = {
					type = energy
					amount > 500
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.514
				days = 1800
				random = 360
			}
		}
	}
	## Special efficiency (Shared Burden)
	option = {
		name = AP_PQ.513_3
		trigger = {
			owner = {
				has_civic = civic_shared_burden
			}
		}
		owner = {
			add_resource = {
				minerals = -1500
				energy = -500
			}
		}
		add_modifier = {
			modifier = planet_infrastructure_investment
			days = 1800
		}
		allow = {
			owner = {
				has_resource = {
					type = minerals
					amount > 1500
				}
				has_resource = {
					type = energy
					amount > 500
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.514
				days = 1800
				random = 360
			}
		}
	}
}

## Third phase begin
planet_event = {
	id = AP_PQ.514
	is_triggered_only = yes
	location = from
	picture = GFX_evt_busy_spaceport
	title = AP_PQ.514_title
	desc = AP_PQ.514_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_phase_2
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	option = {
		name = AP_PQ.514_1
		remove_modifier = planet_quota_phase_2
		add_modifier = {
			modifier = planet_quota_phase_3
		}
		hidden_effect = {
			planet_event = {
				id = AP_PQ.515
				days = 1800
				random = 360
			}
		}
	}
}

## A check to see if the player can keep there population happyish
planet_event = {
	id = AP_PQ.515
	is_triggered_only = yes
	location = from
	picture = GFX_evt_emergency_workers
	title = AP_PQ.515_title
	desc = AP_PQ.515_desc
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_phase_3
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	## loosen standards
	option = {
		planet = {
			unhappiest_pop = {
				kill_pop = yes
			}
		}
		add_modifier = {
			modifier = planet_lower_production_quota
			days = 1800
		}
		name = AP_PQ.515_1
		hidden_effect = {
			planet_event = {
				id = AP_PQ.516
				days = 3600
				random = 360
			}
			if = {
				limit = {
					planet = {
						happiness_planet <= 50
					}
				}
				# Assuming the player fails the test, 3 die
				while = {
					count = 3
					planet = {
						unhappiest_pop = {
							kill_pop = yes
						}
					}
				}
				# A succes still sees more death
				else = {
					planet = {
						unhappiest_pop = {
							kill_pop = yes
						}
					}
				}
			}
		}
	}
	## offer better conditions
	option = {
		planet = {
			unhappiest_pop = {
				kill_pop = yes
			}
		}
		add_modifier = {
			modifier = planet_encourage_populace
			days = 1800
		}
		name = AP_PQ.515_2
		hidden_effect = {
			planet_event = {
				id = AP_PQ.516
				days = 3600
				random = 360
			}
			if = {
				limit = {
					planet = {
						planet_stability <= 60
					}
				}
				# Assuming the player fails the test, 2 die
				while = {
					count = 2
					planet = {
						unhappiest_pop = {
							kill_pop = yes
						}
					}
				}
				# A succes still sees more death
				else = {
					planet = {
						unhappiest_pop = {
							kill_pop = yes
						}
					}
				}
			}
		}
	}
	## Special Death Cult
	option = {
		planet = {
			unhappiest_pop = {
				kill_pop = yes
			}
			unhappiest_pop = {
				kill_pop = yes
			}
		}
		owner = {
			add_resource = {
				unity = 1000
			}
		}
		add_modifier = {
			modifier = planet_encourage_populace
			days = 720
		}
		name = AP_PQ.515_3
		hidden_effect = {
			planet_event = {
				id = AP_PQ.516
				days = 3600
				random = 360
			}
		}
	}
	## Special Corporate Death Cult
	option = {
		planet = {
			unhappiest_pop = {
				kill_pop = yes
			}
			unhappiest_pop = {
				kill_pop = yes
			}
		}
		owner = {
			add_resource = {
				unity = 1000
			}
		}
		add_modifier = {
			modifier = planet_encourage_populace
			days = 720
		}
		name = AP_PQ.515_3
		hidden_effect = {
			planet_event = {
				id = AP_PQ.516
				days = 3600
				random = 360
			}
		}
	}
	## Special Ruthless competition
	option = {
		planet = {
			unhappiest_pop = {
				kill_pop = yes
			}
		}
		name = AP_PQ.515_4
		hidden_effect = {
			planet_event = {
				id = AP_PQ.516
				days = 3600
				random = 360
			}
			if = {
				limit = {
					OR = {
						planet = {
							any_owned_pop = {
								is_pop_category = worker
								happiness < 55
							}
						}
						planet_stability <= 50
					}
				}
				# While i technicly kill them, i do allow the player to get them back by clearing the blockers
				while = {
					count = 2
					planet = {
						unhappiest_pop = {
							kill_pop = yes
						}
						add_blocker = {
							type = d_unsupervised_settlement
						}
					}
				}
			}
		}
	}
	## Special Shared Burden
	option = {
		planet = {
			unhappiest_pop = {
				kill_pop = yes
			}
		}
		name = AP_PQ.515_5
		hidden_effect = {
			planet_event = {
				id = AP_PQ.516
				days = 3600
				random = 360
			}
			if = {
				limit = {
					OR = {
						planet = {
							any_owned_pop = {
								is_pop_category = worker
								happiness < 55
							}
						}
						planet_stability <= 50
					}
				}
				# While i technicly kill them, i do allow the player to get them back by clearing the blockers
				while = {
					count = 2
					planet = {
						unhappiest_pop = {
							kill_pop = yes
						}
						add_blocker = {
							type = d_unsupervised_settlement
						}
					}
				}
			}
		}
	}
}

## Conclusion of the Planetary Quota line
planet_event = {
	id = AP_PQ.516
	is_triggered_only = yes
	location = from
	hide_window = yes
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
		has_modifier = planet_quota_phase_3
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	immediate = {
		if = {
			limit = {
				check_variable = {
					which = quota_delay
					value >= 2
				}
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			else = {
				set_variable = {
					which = quota_success
					value = 1
				}
			}
		}
		planet_event = {
			id = AP_PQ.2
			days = 5
			random = 5
		}
	}
}

##########################################################################
# Second Motive (Projects)
##########################################################################
planet_event = {
	id = AP_PQ.520
	is_triggered_only = yes
	location = from
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	hide_window = yes
}

planet_event = {
	id = AP_PQ.521
	is_triggered_only = yes
	location = from
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	hide_window = yes
}

planet_event = {
	id = AP_PQ.522
	is_triggered_only = yes
	location = from
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	hide_window = yes
}

planet_event = {
	id = AP_PQ.523
	is_triggered_only = yes
	location = from
	trigger = {
		check_variable = {
			which = quota_egalitarian
			value = 1
		}
	}
	abort_trigger = {
		owner = {
			NOT = {
				has_country_flag = quota_active
			}
		}
	}
	abort_effect = {
		IF = {
			limit = {
				OR = {
					has_modifier = planet_quota_planned
					has_modifier = planet_quota_phase_1
					has_modifier = planet_quota_phase_2
					has_modifier = planet_quota_phase_3
				}
			}
			else = {
			}
			set_variable = {
				which = quota_fail
				value = 1
			}
			planet_event = {
				id = AP_PQ.2
				days = 5
			}
		}
	}
	hide_window = yes
}
